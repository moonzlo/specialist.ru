class Point:
    
    def __init__(self, x: int, y: int):
        """
        конструктор, который принимает в качестве параметров значения для координат x и y
        """
        self._x = x
        self._y = y
        
        
    def move_to(self, x: int, y: int):
        """
        метод move_to, который принимает в качестве параметров новые значения для координат x и y
        """
        self._x = x
        self._y = y
    
    
    def move_by(self, x: int, y: int):
        """
        метод move_by, который принимает в качестве параметров новые значения для координат x и y 
        относительно текущих.
        """
        self._x += x
        self._y += y
        
        
#свойства для изменения и получения значений координат x и y    
#     def get_x(self) -> int:
#         return self._x
    
#     def set_x(self, x: int):
#         self._x = x
        
#     def get_y(self) -> int:
#         return self._y
    
#     def set_y(self, y: int):
#         self._y = y
    
#     x = property(get_x, set_x)
#     y = property(get_y, set_y)
    
    
    # альтернативная реализация на декораторах
    @property
    def x(self):
        return self._x
    
    @x.setter
    def x(self, x):
        self._x = x
        
    @property
    def y(self):
        return self._y
    
    @y.setter
    def y(self, y):
        self._y = y
    
    def __repr__(self):
        return f'Я - точка: {self._x} x {self._y}'
